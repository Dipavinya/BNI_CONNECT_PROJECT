@using System.Text.Json
@model List<TemplateMaster>

<div class="container-fluid mt-2">

    <!-- Template Offcanvas -->
    <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel" data-bs-backdrop="true">
        <div class="offcanvas-header">
            <h3 id="offcanvasTitle" class="justify-content-center align-items-center">Add/Edit Template</h3>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body pt-0">
            <form method="post" id="templateForm" >
                <input type="hidden" id="templateId" name="Id" />
                <div class="mb-2">
                    <label class="form-label">Template Name</label>
                    <input type="text" class="form-control" id="templateName" name="TemplateName" placeholder="Enter template name" required>
                </div>
                <div class="mb-2">
                    <label class="form-label">Subject Name</label>
                    <input type="text" class="form-control" id="subjectName" name="Subject" placeholder="Enter subject name" required>
                </div>
                <div class="mb-2">
                    <small class="text-muted">Tip: Use Hi<code>{Your Name}</code> instead of Hi userName, and we will replace it with your username.</small>
                </div>
                <div class="mb-2">
                    <label for="templateBody1" class="form-label">Email Body</label>
                    <div id="snow-editor4" style="height: 300px;" ></div>
                </div>
                    <input type="hidden" id="Body" name="Body" />

                <button type="submit" class="btn btn-primary">Save</button>
            </form>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="float-end mb-3">
                        <button class="btn btn-primary me-1" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight" onclick="clearForm()">
                            Add Template
                        </button>
                    </div>
                    <h4 class="header-title">Manage Template</h4>

                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>ClientId</th>
                                <th>Template Name</th>
                                <th>Subject</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var template in Model)
                            {
                                <tr>
                                    <td>@template.Id</td>
                                    <td>@template.ClientId</td>
                                    <td>@template.TemplateName</td>
                                    <td>@template.Subject</td>
                                    <td>
                                        <a href="@Url.Action("Delete", "Template", new { id = template.Id })" class="btn btn-sm btn-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this template?');">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                        <button class="btn btn-sm btn-warning" title="Edit" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight" onclick="openEditCanvas(@template.Id)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Error Modal -->
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true" data-bs-backdrop="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="modal-body" id="modalErrorMessage"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
  
     var $j = jQuery.noConflict();  
     var snowEditor;
     var editorbody;
     var subject;

$j(document).ready(function () {
    snowEditor = new Quill("#snow-editor4", {
        theme: "snow",
        modules: {
            toolbar: [
                [{ font: [] }, { size: [] }],
                ["bold", "italic", "underline", "strike", { color: [] }, { background: [] }, "code-block"],
                [{ list: "ordered" }, { list: "bullet" }, { indent: "-1" }, { indent: "+1" }, { align: [] }],
                ] ,
                clipboard: {
                    matchVisual: false 
                }
        }
    });

    if (editorbody) {
        fillSnowEditor({ content: editorbody });
    }

     $j("#templateForm").submit(function (event) {
        event.preventDefault();  
    
        var editorContent = snowEditor.root.innerHTML;;

        $j("#Body").val(editorContent);

        var formData = new FormData($j("#templateForm")[0]);

        $j.ajax({
            url: '/Template/CreateTemplate',  
            type: 'POST',
            data: formData,  
            processData: false,  
            contentType: false, 
            success: function (response) {
                console.log('Template created successfully:', response);
                window.location.href = '/Template/Index'; 
            },
            error: function (xhr, status, error) {
                console.error('Error creating template:', error);
                alert('Error creating template');
            }
        });
    });
});

function fillSnowEditor(data) {
    snowEditor.setContents([]);  
    snowEditor.setText(data.title + '\n');  
    snowEditor.clipboard.dangerouslyPasteHTML(snowEditor.getLength(), data.content);  
}


function openEditCanvas(id) {
    $j.ajax({
        url: `/Template/GetTemplateById?id=${id}`,
        type: 'GET',
        dataType: 'json',
        success: function (template) {
            console.log("Template data received:", template);

            $j("#templateId").val(template.data.id);
            $j("#templateName").val(template.data.templateName);
            $j("#subjectName").val(template.data.subject);
            
            $j("#emailBody").val(template.data.body);
            subject = template.data.subject; 
            editorbody = template.data.body;
            var formattedBody = editorbody.replace(/\n/g, '<br>'); 
            console.log("Editor Body:", editorbody);

            fillSnowEditor({ title: "", content: formattedBody });

            var offcanvas = new bootstrap.Offcanvas(document.getElementById('offcanvasRight'));
            offcanvas.show();
        },
        error: function (xhr, status, error) {
            console.error('Error fetching template:', error);
        }
    });
}
    var offcanvasElement = document.getElementById('offcanvasRight');
    offcanvasElement.addEventListener('hidden.bs.offcanvas', function () {
        var editButton = document.querySelector('button[data-bs-target="#offcanvasRight"]');
        if (editButton) {
            editButton.classList.remove('active'); 
        }

        var backdrop = document.querySelector('.offcanvas-backdrop');
        if (backdrop) {
            backdrop.classList.remove('show'); 
            backdrop.remove(); 
        }
    });

function clearForm() {
    document.getElementById("templateId").value = "";
    document.getElementById("templateName").value = "";
    document.getElementById("subjectName").value = "";
    snowEditor.root.innerHTML = "";

    $j("#templateForm").attr("asp-action", "CreateTemplate");
}


</script>

